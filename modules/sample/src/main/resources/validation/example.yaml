swagger: "2.0"
info:
  title: Whatever
  version: 1.0.0
host: localhost:1234
schemes:
  - http
definitions:
  User:
    type: object
    required:
      - id
      - validated
    properties:
      id:
        type: string
      validated:
        $ref: '#/definitions/Validated'
  Validated:
    type: object
    properties:
      max_validation:
        type: integer
        format: int32
        maximum: 100
      min_validation:
        type: integer
        format: int32
        minimum: 1
      range_validation:
        type: integer
        format: int32
        minimum: 0
        maximum: 100
      pattern_validation:
        type: string
        pattern: "[0-9]+"
  Validated2:
    type: object
    properties:
      pattern_validation_partial:
        type: string
        pattern: "pet"
      pattern_validation_exact:
        type: string
        pattern: "^pet$"

  ValidatedCollections:
    type: object
    properties:
      bounded_size_array:
        type: array
        items:
          type: integer
          format: int32
        minItems: 1
        maxItems: 10
      max_size_array:
        type: array
        items:
          type: integer
          format: int32
        maxItems: 5
      min_size_array:
        type: array
        items:
          type: integer
          format: int32
        minItems: 5
      collection_element_validation:
        type: array
        items:
          type: integer
          format: int32
          minimum: 1
        minItems: 5

paths:
  /user/{id}:
    get:
      operationId: getUser
      x-jvm-package: users
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '404':
          description: Not found
